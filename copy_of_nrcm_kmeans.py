# -*- coding: utf-8 -*-
"""Copy of NRCM_Kmeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16pn7FbDXJkkaAXNEi3XKaPhbaEGzgUF4

###Name    :Boddupalli Renuka
###Class   : 4th year
###Branch  : Data Science (cse)
###Roll no : 21X05A6709
###College : Narsimha reddy Engineering College

##Project Title:
###Analysis and pridection of "Mall_Customer.csv" of American mall markets called as phonix mall to find out how many customers are visited to a particular shop.on the basis of this prediction of annual income vs spending score.

##Disclaimer :
###In this particular dataset we assume annual income as a centroid and spending score from the range 1 to 100 data nodes of the clusters.

##Problem Statement :
###The American finance market as per the GDP of 2011 'Phonix_Trillums mall' as in the first range of out of 5.The owner of the mall is wants to be exact which particular shop or product search in different kind of clusters in entire mall.
###As the Datascience Engineer predict the futuristic financial market for upcomming market GDP rate based on no of Clustures.
###The client wants atleast top 5 clustures (shops).
"""

#import the numpy, matlot, pandas libery's
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Read the dataset take variable name called "dataset" only.
dataset = pd.read_csv("Mall_Customers.csv")
# without printing this data add in separet variable as input variable Caqpital X only. loc index by select the all row ,
#and give the required colum index like[3,4].for this particular dataset.
x = dataset.iloc[:,[3,4]].values

## <THE ELBOW METHOD>
#from sklearn used "sklearn.cluster" attribute and import KMeans
from sklearn.cluster import KMeans
#Take a distance from from centroid to cluster point with WrapsColumnExpression.
wcss = []
# Assume you have 10 cluster and iterate the for up to range 10 with iterater kmeans++.
# Fit the model if value comes too samlla in range.
#For clustering in wcss ,inertia is adding / appending is required.(kmeans.inertia_)#defalut usecase.
#Plot the poarticular graph along with the wcss and your range which you taken as input variable.
#Add title "The Elbow Method".
#Lable x variable as "No of Customers".
#Lable y variable as "WCSS".
#Plot the graph using plt.show().
for i in range (1,11):
  kmeans = KMeans(n_clusters = i,init = "k-means++",random_state = 42)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)
plt.plot(range(1,11),wcss)

plt.title("The Elbow Method")
plt.xlabel("No of Clusters")
plt.ylabel("wcss")
plt.show()

for i in range(1,11):
  kmeans=KMeans(n_clusters = 3, init="k-means++",random_state = 42)
  y_kmeans=kmeans.fit_predict(x)



# Take any no of cluster and run you take 5.
plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()

"""##Conclusion :
###According to the model basis prediction using machine learning algorith A,L k-clusturing we found that clusture 1 which consist red color is a highest cluster which attach more than 50 data nodes.

##References :
###The model building algorithm develop for all kinds of clusturation values.
###The yellow spots represents centroids which is max to max only 3.
"""